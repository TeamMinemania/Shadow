plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
    mavenCentral()
    jcenter()
}

configurations {
    impl
    modImpl
}

dependencies {
    def dependency = { id ->
        implementation id
        shadow id
    }
	impl('io.github.spair:imgui-java-binding:1.82.2')
    impl('io.github.spair:imgui-java-lwjgl3:1.82.2') {
        exclude group: "org.lwjgl"
    }
    ["linux", "linux-x86", "macos", "windows", "windows-x86"].each {
        impl("io.github.spair:imgui-java-natives-$it:1.82.2")
    }

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    dependency "io.socket:socket.io-client:2.1.0"
    dependency "club.minnced:java-discord-rpc:2.0.2"

    modImpl(group: "io.github.ladysnake", name: "satin", version: "1.9.0") {
		transitive = false
	}

    configurations.modImpl.dependencies.each {
		modImplementation(it)
		include(it)
	}

    configurations.impl.dependencies.each {
        implementation(group: it.group, name: it.name, version: it.version)
        include(group: it.group, name: it.name, version: it.version)
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

remapJar {
    dependsOn shadowJar
    input.set(shadowJar.archiveFile)
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
}
